{"version":3,"sources":["../../src/services/UserService.js"],"names":["UserService","newUser","database","User","create","userId","avatar","update","returning","where","id","user","username","password","findOne","Error","bcrypt","compare","isPasswordMatch"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;IAEMA,W;;;;;;;;;;;;oDACmBC,O;;;;;;;uBAEAC,mBAASC,IAAT,CAAcC,MAAd,CAAqBH,OAArB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAKKI,M,EAAQC,M;;;;;;;;uBAEPJ,mBAASC,IAAT,CAAcI,MAAd,CAAqB;AAAED,kBAAAA,MAAM,EAANA;AAAF,iBAArB,EAAiC;AAAEE,kBAAAA,SAAS,EAAE,IAAb;AAAmBC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAEL;AAAN;AAA1B,iBAAjC,C;;;AAAbM,gBAAAA,I;kDACCA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,C;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMgBC,Q,EAAUC,Q;;;;;;;;uBAEdX,mBAASC,IAAT,CAAcW,OAAd,CAAsB;AAACL,kBAAAA,KAAK,EAAE;AAACG,oBAAAA,QAAQ,EAARA;AAAD;AAAR,iBAAtB,C;;;AAAbD,gBAAAA,I;;oBACDA,I;;;;;sBACK,IAAII,KAAJ,CAAU,2BAAV,C;;;;uBAEoBC,mBAAOC,OAAP,CAAeJ,QAAf,EAAyBF,IAAI,CAACE,QAA9B,C;;;AAAxBK,gBAAAA,e;;oBACDA,e;;;;;sBACK,IAAIH,KAAJ,CAAU,2BAAV,C;;;kDAEHJ,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOJX,W","sourcesContent":["import database from '../models'\nimport bcrypt from 'bcrypt'\n\nclass UserService {\n    static async addUser(newUser) {\n        try {\n            return await database.User.create(newUser)\n        } catch (error) {\n            throw error\n        }\n    }\n    static async uploadAvatar(userId, avatar) {\n        try {\n            const user = await database.User.update({ avatar }, { returning: true, where: { id: userId } })\n            return user[1][0]\n        } catch (error) {\n            throw error\n        }\n    }\n\n    static async findByCredentials(username, password) {\n        try {\n            const user = await database.User.findOne({where: {username }})\n            if (!user) {\n                throw new Error('Invalid login credentials')\n            }\n            const isPasswordMatch = await bcrypt.compare(password, user.password)\n            if (!isPasswordMatch) {\n                throw new Error('Invalid login credentials')\n            }\n            return user\n        } catch (error) {\n            throw error\n        }\n    }\n}\n\nexport default UserService\n"],"file":"UserService.js"}
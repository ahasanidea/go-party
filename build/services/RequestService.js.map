{"version":3,"sources":["../../src/services/RequestService.js"],"names":["RequestService","newRequest","database","Request","create","guest_id","party_id","findOne","where"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;;;;;oDAC4BC,U;;;;;;;uBAETC,mBAASC,OAAT,CAAiBC,MAAjB,CAAwBH,UAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMWI,Q,EAAUC,Q;;;;;;;uBAErBJ,mBAASC,OAAT,CAAiBI,OAAjB,CAAyB;AAClCC,kBAAAA,KAAK,EAAE;AACHH,oBAAAA,QAAQ,EAARA,QADG;AAEHC,oBAAAA,QAAQ,EAARA;AAFG;AAD2B,iBAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAYVN,c","sourcesContent":["import database from '../models'\n\nclass RequestService {\n    static async sendPartyRequest(newRequest) {\n        try {\n            return await database.Request.create(newRequest)\n        } catch (error) {\n            throw error\n        }\n    }\n\n    static async checkRequestExists(guest_id, party_id) {\n        try {\n            return await database.Request.findOne({\n                where: {\n                    guest_id,\n                    party_id,\n                },\n            })\n        } catch (error) {\n            throw error\n        }\n    }\n}\n\nexport default RequestService\n"],"file":"RequestService.js"}
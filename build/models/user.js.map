{"version":3,"sources":["../../src/models/user.js"],"names":["module","exports","sequelize","DataTypes","User","define","username","type","STRING","allowNull","unique","validate","notEmpty","msg","len","args","email","isEmail","password","bio","TEXT","dob","DATE","avatar","BLOB","associate","models"],"mappings":";;AAAA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,MAAM,EAAE,IAHF;AAINC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC,SADJ;AAINC,QAAAA,GAAG,EAAE;AACDC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CADL;AAEDF,UAAAA,GAAG,EAAE;AAFJ;AAJC;AAJJ,KADwB;AAelCG,IAAAA,KAAK,EAAC;AACFT,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADd;AAEFC,MAAAA,SAAS,EAAE,KAFT;AAGFC,MAAAA,MAAM,EAAE,IAHN;AAIFC,MAAAA,QAAQ,EAAE;AACNM,QAAAA,OAAO,EAAE;AACLJ,UAAAA,GAAG,EAAE;AADA;AADH;AAJR,KAf4B;AAyBlCK,IAAAA,QAAQ,EAAE;AACNX,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNE,MAAAA,QAAQ,EAAE;AACNG,QAAAA,GAAG,EAAE;AACDC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,GAAJ,CADL;AAEDF,UAAAA,GAAG,EAAE;AAFJ;AADC;AAHJ,KAzBwB;AAmClCM,IAAAA,GAAG,EAAE;AACDZ,MAAAA,IAAI,EAAEJ,SAAS,CAACiB,IADf;AAEDT,MAAAA,QAAQ,EAAE;AACNG,QAAAA,GAAG,EAAE;AACDC,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,GAAL,CADL;AAEDF,UAAAA,GAAG,EAAE;AAFJ;AADC;AAFT,KAnC6B;AA4ClCQ,IAAAA,GAAG,EAAE;AACDd,MAAAA,IAAI,EAAEJ,SAAS,CAACmB;AADf,KA5C6B;AA+ClCC,IAAAA,MAAM,EAAE;AACJhB,MAAAA,IAAI,EAAEJ,SAAS,CAACqB;AADZ;AA/C0B,GAAzB,EAkDV,EAlDU,CAAb;;AAmDApB,EAAAA,IAAI,CAACqB,SAAL,GAAiB,UAASC,MAAT,EAAiB,CAClC;AACC,GAFD;;AAGA,SAAOtB,IAAP;AACH,CAxDD","sourcesContent":["/* eslint-disable no-undef */\nmodule.exports = (sequelize, DataTypes) => {\n    const User = sequelize.define('User', {\n        username: {\n            type: DataTypes.STRING,\n            allowNull: false,\n            unique: true,\n            validate: {\n                notEmpty: {\n                    msg: 'Username is required.'\n                },\n                len: {\n                    args: [3, 15],\n                    msg: 'Username length should be between 3 and 15 characters.'\n                }\n            }\n        },\n        email:{\n            type: DataTypes.STRING,\n            allowNull: false,\n            unique: true,\n            validate: {\n                isEmail: {\n                    msg: 'Invalid email. Provide a correct email.'\n                }\n            }\n        }, \n        password: {\n            type: DataTypes.STRING,\n            allowNull: false,\n            validate: {\n                len: {\n                    args: [6, 100],\n                    msg: 'Password should be more than 5 characters.'\n                }\n            }\n        }, \n        bio: {\n            type: DataTypes.TEXT,\n            validate: {\n                len: {\n                    args: [10, 500],\n                    msg: 'Bio should be more than 10 characters and less than 500 characters'\n                }\n            }\n        }, \n        dob: {\n            type: DataTypes.DATE,\n        }, \n        avatar: {\n            type: DataTypes.BLOB\n        } \n    }, {})\n    User.associate = function(models) {\n    // associations can be defined here\n    }\n    return User\n}"],"file":"user.js"}
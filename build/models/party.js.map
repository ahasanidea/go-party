{"version":3,"sources":["../../src/models/party.js"],"names":["sequelize","DataTypes","Party","define","title","type","STRING","allowNull","validate","notEmpty","msg","len","args","location","description","party_date","DATE","is_free","BOOLEAN","defaultValue","party_avatar","associate","User","belongsTo","foreignKey","belongsToMany","as","through"],"mappings":";;;;;;;eAAe,kBAACA,SAAD,EAAYC,SAAZ,EAA0B;AACrC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CACV,OADU,EAEV;AACIC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADb;AAEHC,MAAAA,SAAS,EAAE,KAFR;AAGHC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC;AADJ,OAHP;AAQHC,MAAAA,GAAG,EAAE;AACDC,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,GAAJ,CADL;AAEDF,QAAAA,GAAG,EAAE;AAFJ;AARF,KADX;AAcIG,IAAAA,QAAQ,EAAE;AACNR,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC;AADJ;AAHJ,KAdd;AAuBII,IAAAA,WAAW,EAAE;AACTT,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADP;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC;AADJ;AAHD,KAvBjB;AAgCIK,IAAAA,UAAU,EAAE;AACRV,MAAAA,IAAI,EAAEJ,SAAS,CAACe,IADR;AAERT,MAAAA,SAAS,EAAE,KAFH;AAGRC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC;AADJ;AAHF,KAhChB;AAyCIO,IAAAA,OAAO,EAAE;AACLZ,MAAAA,IAAI,EAAEJ,SAAS,CAACiB,OADX;AAELC,MAAAA,YAAY,EAAE;AAFT,KAzCb;AA6CIC,IAAAA,YAAY,EAAE;AACVf,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADN;AA7ClB,GAFU,EAmDV,EAnDU,CAAd;;AAqDAJ,EAAAA,KAAK,CAACmB,SAAN,GAAkB,gBAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC5BpB,IAAAA,KAAK,CAACqB,SAAN,CAAgBD,IAAhB,EAAsB;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAAtB;AACAtB,IAAAA,KAAK,CAACuB,aAAN,CAAoBH,IAApB,EAA0B;AAAEI,MAAAA,EAAE,EAAE,QAAN;AAAgBC,MAAAA,OAAO,EAAE,cAAzB;AAAyCH,MAAAA,UAAU,EAAE;AAArD,KAA1B;AACH,GAHD;;AAIA,SAAOtB,KAAP;AACH,C","sourcesContent":["export default (sequelize, DataTypes) => {\n    const Party = sequelize.define(\n        'Party',\n        {\n            title: {\n                type: DataTypes.STRING,\n                allowNull: false,\n                validate: {\n                    notEmpty: {\n                        msg: 'Party title is required',\n                    },\n                },\n                len: {\n                    args: [5, 500],\n                    msg: 'Title length should be between 5 and 500 characters.',\n                },\n            },\n            location: {\n                type: DataTypes.STRING,\n                allowNull: false,\n                validate: {\n                    notEmpty: {\n                        msg: 'Party location is required',\n                    },\n                },\n            },\n            description: {\n                type: DataTypes.STRING,\n                allowNull: false,\n                validate: {\n                    notEmpty: {\n                        msg: 'Party description is required',\n                    },\n                },\n            },\n            party_date: {\n                type: DataTypes.DATE,\n                allowNull: false,\n                validate: {\n                    notEmpty: {\n                        msg: 'Party date is required',\n                    },\n                },\n            },\n            is_free: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: true\n            },\n            party_avatar: {\n                type: DataTypes.STRING,\n            },\n        },\n        {}\n    )\n    Party.associate = ({ User }) => {\n        Party.belongsTo(User, { foreignKey: 'host_id' })\n        Party.belongsToMany(User, { as: 'guests', through: 'party_guests', foreignKey: 'party_id' })\n    }\n    return Party\n}\n"],"file":"party.js"}
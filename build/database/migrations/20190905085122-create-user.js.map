{"version":3,"sources":["../../../src/database/migrations/20190905085122-create-user.js"],"names":["module","exports","up","queryInterface","Sequelize","createTable","id","allowNull","autoIncrement","primaryKey","type","INTEGER","username","STRING","unique","validate","notEmpty","msg","len","args","email","isEmail","password","bio","TEXT","dob","DATE","avatar","BLOB","createdAt","updatedAt","down","dropTable"],"mappings":";;AAAA;;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,EAAE,EAAE,YAACC,cAAD,EAAiBC,SAAjB,EAA+B;AAC/B,WAAOD,cAAc,CAACE,WAAf,CAA2B,OAA3B,EAAoC;AACvCC,MAAAA,EAAE,EAAE;AACAC,QAAAA,SAAS,EAAE,KADX;AAEAC,QAAAA,aAAa,EAAE,IAFf;AAGAC,QAAAA,UAAU,EAAE,IAHZ;AAIAC,QAAAA,IAAI,EAAEN,SAAS,CAACO;AAJhB,OADmC;AAOvCC,MAAAA,QAAQ,EAAE;AACNF,QAAAA,IAAI,EAAEN,SAAS,CAACS,MADV;AAENN,QAAAA,SAAS,EAAE,KAFL;AAGNO,QAAAA,MAAM,EAAE,IAHF;AAINC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,GAAG,EAAE;AADC,WADJ;AAINC,UAAAA,GAAG,EAAE;AACDC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CADL;AAEDF,YAAAA,GAAG,EAAE;AAFJ;AAJC;AAJJ,OAP6B;AAqBvCG,MAAAA,KAAK,EAAE;AACHV,QAAAA,IAAI,EAAEN,SAAS,CAACS,MADb;AAEHN,QAAAA,SAAS,EAAE,KAFR;AAGHO,QAAAA,MAAM,EAAE,IAHL;AAIHC,QAAAA,QAAQ,EAAE;AACNM,UAAAA,OAAO,EAAE;AACLJ,YAAAA,GAAG,EAAE;AADA;AADH;AAJP,OArBgC;AA+BvCK,MAAAA,QAAQ,EAAE;AACNZ,QAAAA,IAAI,EAAEN,SAAS,CAACS,MADV;AAENN,QAAAA,SAAS,EAAE,KAFL;AAGNQ,QAAAA,QAAQ,EAAE;AACNG,UAAAA,GAAG,EAAE;AACDC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,GAAJ,CADL;AAEDF,YAAAA,GAAG,EAAE;AAFJ;AADC;AAHJ,OA/B6B;AAyCvCM,MAAAA,GAAG,EAAE;AACDb,QAAAA,IAAI,EAAEN,SAAS,CAACoB,IADf;AAEDT,QAAAA,QAAQ,EAAE;AACNG,UAAAA,GAAG,EAAE;AACDC,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,GAAL,CADL;AAEDF,YAAAA,GAAG,EAAE;AAFJ;AADC;AAFT,OAzCkC;AAkDvCQ,MAAAA,GAAG,EAAE;AACDf,QAAAA,IAAI,EAAEN,SAAS,CAACsB;AADf,OAlDkC;AAqDvCC,MAAAA,MAAM,EAAE;AACJjB,QAAAA,IAAI,EAAEN,SAAS,CAACwB;AADZ,OArD+B;AAwDvCC,MAAAA,SAAS,EAAE;AACPtB,QAAAA,SAAS,EAAE,KADJ;AAEPG,QAAAA,IAAI,EAAEN,SAAS,CAACsB;AAFT,OAxD4B;AA4DvCI,MAAAA,SAAS,EAAE;AACPvB,QAAAA,SAAS,EAAE,KADJ;AAEPG,QAAAA,IAAI,EAAEN,SAAS,CAACsB;AAFT;AA5D4B,KAApC,CAAP;AAiEH,GAnEY;AAoEbK,EAAAA,IAAI,EAAE,cAAC5B,cAAD,EAAiBC,SAAjB,EAA+B;AACjC,WAAOD,cAAc,CAAC6B,SAAf,CAAyB,OAAzB,CAAP;AACH;AAtEY,CAAjB","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n\nmodule.exports = {\n    up: (queryInterface, Sequelize) => {\n        return queryInterface.createTable('Users', {\n            id: {\n                allowNull: false,\n                autoIncrement: true,\n                primaryKey: true,\n                type: Sequelize.INTEGER\n            },\n            username: {\n                type: Sequelize.STRING,\n                allowNull: false,\n                unique: true,\n                validate: {\n                    notEmpty: {\n                        msg: 'Username is required.'\n                    },\n                    len: {\n                        args: [3, 15],\n                        msg: 'Username length should be between 3 and 15 characters.'\n                    }\n                }\n            },\n            email: {\n                type: Sequelize.STRING,\n                allowNull: false,\n                unique: true,\n                validate: {\n                    isEmail: {\n                        msg: 'Invalid email. Provide a correct email.'\n                    }\n                }\n            },\n            password: {\n                type: Sequelize.STRING,\n                allowNull: false,\n                validate: {\n                    len: {\n                        args: [6, 100],\n                        msg: 'Password should be more than 5 characters.'\n                    }\n                }\n            },\n            bio: {\n                type: Sequelize.TEXT,\n                validate: {\n                    len: {\n                        args: [10, 500],\n                        msg: 'Bio should be more than 10 characters and less than 500 characters'\n                    }\n                }\n            },\n            dob: {\n                type: Sequelize.DATE\n            },\n            avatar: {\n                type: Sequelize.BLOB\n            },\n            createdAt: {\n                allowNull: false,\n                type: Sequelize.DATE\n            },\n            updatedAt: {\n                allowNull: false,\n                type: Sequelize.DATE\n            }\n        })\n    },\n    down: (queryInterface, Sequelize) => {\n        return queryInterface.dropTable('Users')\n    }\n}"],"file":"20190905085122-create-user.js"}
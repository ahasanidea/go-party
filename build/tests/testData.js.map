{"version":3,"sources":["../../src/tests/testData.js"],"names":["validUser","id","username","password","email","invalidUser","testUser1","testParty1","title","description","location","party_date","party_type","host_id","invalidDataUser","validParty","invalidParty","invalidDataParty","validRequest","guest_id","party_id","destroyUser","database","User","destroy","where","destroyParty","Party","populateParty","create","populateInitialParty","populateUser","mochAsync","fn","done","call","then","err"],"mappings":"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","sourcesContent":["import database from '../models'\n\nconst validUser = {\n    id: 1,\n    username: 'testUser',\n    password: 'testPassword',\n    email: 'test@app.com',\n}\n\nconst invalidUser = {\n    username: 'testUser',\n    password: 'testPass',\n}\n\nconst testUser1 = {\n    id: 2,\n    username: 'testuser1',\n    password: 'testuserpass1',\n    email: 'testuser@app.com',\n}\n\nconst testParty1 = {\n    id: 2,\n    title: 'Test party 1',\n    description: 'This is a test party 1',\n    location: 'test location 1',\n    party_date: '02.02.2020',\n    party_type: 'house party 1',\n    host_id: testUser1.id,\n}\n\nconst invalidDataUser = {\n    username: 12345,\n    password: 'testPassword',\n    email: 'app.com',\n}\n\nconst validParty = {\n    id: 1,\n    title: 'Test party',\n    description: 'This is a test party',\n    location: 'test location',\n    party_date: '02.02.2020',\n    party_type: 'house party',\n    host_id: validUser.id,\n}\n\nconst invalidParty = {\n    title: 'Test party',\n    description: 'This is a test party',\n    location: 'test location',\n}\n\nconst invalidDataParty = {\n    title: 5635363,\n    description: 'This is a test party',\n    location: 'test location',\n    party_date: '02.02.2020',\n    party_type: 'house party',\n    host_id: validUser.id,\n}\n\nconst validRequest = {\n    id: 1,\n    guest_id: testUser1.id,\n    party_id: testParty1.id,\n}\n\nconst destroyUser = async () => {\n    return await database.User.destroy({ where: { id: 2 } })\n}\nconst destroyParty = async () => {\n    return await database.Party.destroy({ where: { id: 2 } })\n}\n\nconst populateParty = async () => {\n    return await database.Party.create(testParty1)\n}\n\nconst populateInitialParty = async () => {\n    return await database.Party.create(validParty)\n}\n\nconst populateUser = async () => {\n    return await database.User.create(testUser1)\n}\n\nconst mochAsync = fn => {\n    return done => {\n        fn.call().then(done, err => {\n            done(err)\n        })\n    }\n}\n\nexport {\n    validUser,\n    invalidUser,\n    invalidDataUser,\n    validParty,\n    invalidParty,\n    invalidDataParty,\n    populateUser,\n    destroyUser,\n    populateParty,\n    destroyParty,\n    validRequest,\n    mochAsync,\n    populateInitialParty,\n}\n"],"file":"testData.js"}